#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
using namespace std;
#define LEN1 sizeof(Product)
#define LEN2 sizeof(Staff)
typedef struct Product
{
	char name[10];              //产品名称
	int productscount;          //产品数量
	int year,month,day;         //完成时间
	struct Product *next;
}*product;
typedef struct Staff
{
	char empnumber[10];         //职工编号
	int sum;                    //产品总和
	product p;                  //产品记录
	struct Staff *next;
};
struct Staff *staff;
void prompt_message()//职工工作量查询和统计系统使用说明
{
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *        欢迎使用职工工作量查询和统计系统         *\n");
	printf("              *        使用前请仔细阅读下面的使用说明           *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *        1.请按照系统提示输入信息，避免错误       *\n");
	printf("              *        2.如果出现系统运行错误，请重启           *\n");
	printf("              *        3.请注意由空格隔开的输入信息之间只       *\n");
	printf("              *          能出现一个空格,否则会出现错误          *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *              完成使用说明阅读请按  1            *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              ");
}
void menue()//菜单
{
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *     1.职工相关信息录入                          *\n");
	printf("              *     2.按完成数量对职工进行排序，并输出名次      *\n");
	printf("              *     3.按职工编号查询工作记录                    *\n");
	printf("              *     0.退出系统                                  *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
}
void sort()//排序函数
{
	Staff *i2;
	i2=staff->next;
	while(i2!=NULL)
	{
		Staff *j2,*q;
		q=i2;
		j2=i2->next;
		while(j2!=NULL)
		{
			if(j2->sum>q->sum)
				q=j2;
			j2=j2->next;
		}
		if(q!=i2)//将q与i2内的信息调换
		{
			char empnumber[10];
			int sum;
			product w;
			strcpy(empnumber,q->empnumber);
			sum=q->sum;
			w=q->p;
			strcpy(q->empnumber,i2->empnumber);
			q->sum=i2->sum;
			q->p=i2->p;
			strcpy(i2->empnumber,empnumber);
			i2->sum=sum;
			i2->p=w;
		}
		i2=i2->next;
	}
}
void message_input()//输入信息函数
{
	char empnumber[10];
	char name[10];
	int productscount; 
	int year,month,day;
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *               职工相关信息录入说明              *\n");
	printf("              *        1.员工信息包括员工编号，产品名称         *\n");
	printf("              *          产品数量以及完成时间。                 *\n");
	printf("              *        2.员工信息请按照给定格式输入，避免出错   *\n");
	printf("              *        3.若同一产品有多次输入，系统只记录最后   *\n");
	printf("              *          一次得完成的时间。                     *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *    输入格式:编号+产品名称+数量+日期(年月日）    *\n");
	printf("              *             各项之间用空格隔开，回车结束        *\n");
	printf("              *   例;编号为001的职工在2019年1月1日完成a产品10件 *\n");
	printf("              *            输入“001 a 10 2019 1 1“            *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              ");
	scanf("%s%s%d%d%d%d",empnumber,name,&productscount,&year,&month,&day);
	struct Staff *s1,*s2;
	s1=staff;
	s2=s1->next;
	while(s2!=NULL)
	{
		if(!strcmp(s2->empnumber,empnumber))//职工编号相等，将产品总数累计
		{
			product q1,q2;
			q1=q2=s2->p;
			s2->sum+=productscount;
			while(q2!=NULL)
			{
				if(!strcmp(q2->name,name))//产品名称相同，数量累计，时间更新
				{
					q2->productscount+=productscount;
					q2->year=year;
					q2->month=month;
					q2->day=day;
					break;
				}
				q1=q2;
				q2=q2->next;
			}
			if(q2==NULL)//产品名称不相同，创建新空间
			{
				q2=(product)malloc(LEN1);
				strcpy(q2->name,name);
				q2->productscount=productscount;
				q2->year=year;
				q2->month=month;
				q2->day=day;
				q2->next=NULL;
				q1->next=q2;
			}
			break;
		}
		s1=s2;
		s2=s2->next;
	}
	if(s2==NULL)//职工编号不相等，创建新空间连在链表尾
	{
		s2=(Staff*)malloc(LEN2);
		s2->sum=0;
		strcpy(s2->empnumber,empnumber);
		s2->sum+=productscount;
		s2->next=NULL;
		s1->next=s2;
		s2->p=(product)malloc(LEN1);
		strcpy(s2->p->name,name);
		s2->p->productscount=productscount;
		s2->p->year=year;
		s2->p->month=month;
		s2->p->day=day;
		s2->p->next=NULL;
	}
	sort();//调用排序函数对连接好的链表进行排序
}
void message_output()//输出排序结果函数
{
	if(staff->next==NULL)
	{
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
		printf("              *                当前系统内无职工信息             *\n");
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	}
	else
	{
		int num=1;
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
		printf("              *  职工名次         职工编号        产品总数(件)  *\n");
		Staff *p=staff->next;
		while(p!=NULL)
		{
			printf("              *     %-2d              %-10s      %-4d        *\n",num++,p->empnumber,p->sum);
			p=p->next;
		}
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	}
}
void message_quering()//查询特定员工函数
{
	char empnumber[10];
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *         请输入要查询的职工编号,以回车结束       *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              ");
	scanf("%s",empnumber);
	int index=0;
	Staff *p0=staff->next;
	while(p0!=NULL)
	{
		if(!strcmp(p0->empnumber,empnumber))
		{
			index=1;
			printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
			printf("              *          职工编号             产品总数(件)      *\n");
			printf("              *            %-10s            %-4d           *\n",p0->empnumber,p0->sum);
			printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
			printf("              *    产品名称     产品数量(件)       完成时间     *\n");
			product q;
			q=p0->p;
			while(q!=NULL)
			{
				printf("              *      %-10s    %-4d            %4d-%-2d-%-2d   *\n",q->name,q->productscount,q->year,q->month,q->day);
				q=q->next;
			}
			break;
		}
		p0=p0->next;
	}
	if(!index)
	{
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
		printf("              *    ！没有找到该编号的职工，请查证后重新输入！   *\n");
		printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	}
}
void mange()
{
	start:menue();
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *                请输入功能编号  <1-3>            *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              ");
	int n;
	cin>>n;
	switch(n)
	{
	case 1:message_input();break;//调用输入函数
	case 2:message_output();break;//调用输出函数
	case 3:message_quering();break;//调用查询函数
	case 0:exit(0);break;
	default://编号输入错误
		{
			printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
			printf("              *                   编号输入错误                  *\n");
			printf("              *              重新输入请按1，退出系统0.          *\n");
			printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
			printf("              ");
			int ans;
			cin>>ans;
			if(ans==1)
				goto start;
			else if(ans==0)
				exit(0);
		}break;
	}
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              *        操作结束，是否继续进行选择其他功能       *\n");
	printf("              *              1:继续     2:退出系统              *\n");
	printf("              * * * * * * * * * * * * * * * * * * * * * * * * * *\n");
	printf("              ");
	int s;
	cin>>s;
	if(s==1)
		goto start;
	else
		exit(0);
}
int main()
{
	prompt_message();//系统使用说明
	int n;
    cin>>n;
	staff=(Staff*)malloc(LEN1);
	memset(staff->empnumber,'0',10);//初始化
	staff->next=NULL;
	staff->sum=0;
	staff->p=NULL;
	mange();
	return 0;
}
